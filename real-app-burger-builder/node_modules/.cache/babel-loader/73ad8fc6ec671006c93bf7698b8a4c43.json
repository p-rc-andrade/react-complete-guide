{"ast":null,"code":"var _jsxFileName = \"C:\\\\My_Storage\\\\code-repo\\\\web-dev\\\\react\\\\_udemy-courses\\\\react-complete-guide\\\\real-app-burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.3\n};\n\nclass BuilderBurger extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.updatePurchaseState = () => {\n      const ingredients = { ...this.state.ingredients\n      };\n      const sumIngredients = Object.keys(ingredients).reduce((acc, i) => {\n        return acc + ingredients[i];\n      }, 0);\n      console.log(\"Before\");\n      console.log(this.state);\n      this.setState({\n        purchasable: sumIngredients > 0\n      });\n      console.log(\"After\");\n      console.log(this.state);\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState();\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount <= 0) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceSubtraction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceSubtraction;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState();\n    };\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    console.log(disabledInfo);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      currentPrice: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabledInfo: disabledInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default BuilderBurger;","map":{"version":3,"sources":["C:/My_Storage/code-repo/web-dev/react/_udemy-courses/react-complete-guide/real-app-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","INGREDIENT_PRICES","salad","bacon","cheese","meat","BuilderBurger","state","ingredients","totalPrice","purchasable","updatePurchaseState","sumIngredients","Object","keys","reduce","acc","i","console","log","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","priceSubtraction","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n};\r\n\r\nclass BuilderBurger extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n    },\r\n    totalPrice: 4,\r\n    purchasable: false,\r\n  };\r\n\r\n  updatePurchaseState = () => {\r\n    const ingredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    const sumIngredients = Object.keys(ingredients).reduce((acc, i) => {\r\n      return acc + ingredients[i];\r\n    }, 0);\r\n\r\n    console.log(\"Before\");\r\n    console.log(this.state);\r\n    this.setState({\r\n      purchasable: sumIngredients > 0,\r\n    });\r\n    console.log(\"After\");\r\n    console.log(this.state);\r\n  };\r\n\r\n  addIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n    this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n    this.updatePurchaseState();\r\n  };\r\n\r\n  removeIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) return;\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n\r\n    const priceSubtraction = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceSubtraction;\r\n    this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n    this.updatePurchaseState();\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n\r\n    console.log(disabledInfo);\r\n\r\n    return (\r\n      <>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          currentPrice={this.state.totalPrice}\r\n          purchasable={this.state.purchasable}\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabledInfo={disabledInfo}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuilderBurger;\r\n"]},"metadata":{},"sourceType":"module"}